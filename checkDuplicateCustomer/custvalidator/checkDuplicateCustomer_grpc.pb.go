// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.17.3
// source: checkDuplicateCustomer.proto

package custvalidator

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CheckDuplicateCustomerClient is the client API for CheckDuplicateCustomer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CheckDuplicateCustomerClient interface {
	CheckDuplicateCustomerBeforeCreate(ctx context.Context, in *RequestMsg, opts ...grpc.CallOption) (*ResponseMsg, error)
}

type checkDuplicateCustomerClient struct {
	cc grpc.ClientConnInterface
}

func NewCheckDuplicateCustomerClient(cc grpc.ClientConnInterface) CheckDuplicateCustomerClient {
	return &checkDuplicateCustomerClient{cc}
}

func (c *checkDuplicateCustomerClient) CheckDuplicateCustomerBeforeCreate(ctx context.Context, in *RequestMsg, opts ...grpc.CallOption) (*ResponseMsg, error) {
	out := new(ResponseMsg)
	err := c.cc.Invoke(ctx, "/checkDuplicateCustomer.CheckDuplicateCustomer/CheckDuplicateCustomerBeforeCreate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CheckDuplicateCustomerServer is the server API for CheckDuplicateCustomer service.
// All implementations must embed UnimplementedCheckDuplicateCustomerServer
// for forward compatibility
type CheckDuplicateCustomerServer interface {
	CheckDuplicateCustomerBeforeCreate(context.Context, *RequestMsg) (*ResponseMsg, error)
	mustEmbedUnimplementedCheckDuplicateCustomerServer()
}

// UnimplementedCheckDuplicateCustomerServer must be embedded to have forward compatible implementations.
type UnimplementedCheckDuplicateCustomerServer struct {
}

func (UnimplementedCheckDuplicateCustomerServer) CheckDuplicateCustomerBeforeCreate(context.Context, *RequestMsg) (*ResponseMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CheckDuplicateCustomerBeforeCreate not implemented")
}
func (UnimplementedCheckDuplicateCustomerServer) mustEmbedUnimplementedCheckDuplicateCustomerServer() {
}

// UnsafeCheckDuplicateCustomerServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CheckDuplicateCustomerServer will
// result in compilation errors.
type UnsafeCheckDuplicateCustomerServer interface {
	mustEmbedUnimplementedCheckDuplicateCustomerServer()
}

func RegisterCheckDuplicateCustomerServer(s grpc.ServiceRegistrar, srv CheckDuplicateCustomerServer) {
	s.RegisterService(&CheckDuplicateCustomer_ServiceDesc, srv)
}

func _CheckDuplicateCustomer_CheckDuplicateCustomerBeforeCreate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckDuplicateCustomerServer).CheckDuplicateCustomerBeforeCreate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/checkDuplicateCustomer.CheckDuplicateCustomer/CheckDuplicateCustomerBeforeCreate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckDuplicateCustomerServer).CheckDuplicateCustomerBeforeCreate(ctx, req.(*RequestMsg))
	}
	return interceptor(ctx, in, info, handler)
}

// CheckDuplicateCustomer_ServiceDesc is the grpc.ServiceDesc for CheckDuplicateCustomer service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CheckDuplicateCustomer_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "checkDuplicateCustomer.CheckDuplicateCustomer",
	HandlerType: (*CheckDuplicateCustomerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CheckDuplicateCustomerBeforeCreate",
			Handler:    _CheckDuplicateCustomer_CheckDuplicateCustomerBeforeCreate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "checkDuplicateCustomer.proto",
}
